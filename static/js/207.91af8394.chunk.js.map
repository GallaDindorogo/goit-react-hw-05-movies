{"version":3,"file":"static/js/207.91af8394.chunk.js","mappings":"gMACA,EAAkC,mCAAlC,EAA6F,yC,oCC0C7F,EArCiB,WACf,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SACRE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAoBH,GAASI,MAAK,SAAAN,GAAI,OAAIC,EAAQD,EAAZ,GACvC,GAAE,CAACE,IAEJ,IAAMK,EAAWP,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,UAAWC,EAA/B,EAA+BA,aAA/B,OACxB,0BACGA,IACC,gBACEC,UAAWC,EACXC,IAAG,0CAAqCH,GACxCI,IAAI,GACJC,MAAM,SAGV,uBAAIP,KACJ,uBAAIC,MAVGF,EADe,IAe1B,OACE,+BACE,yBACE,eAAII,UAAWC,EAAf,SACuB,IAApBP,EAASW,QACR,wFAEAX,OAMX,C,+LCnCDY,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QALiB,oCAQnB,IAAMC,EAAiB,mCAAG,oGACDF,EAAAA,EAAAA,IAAU,wBADT,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,qDAKjBC,EAAY,mCAAG,WAAMC,GAAN,uFACIN,EAAAA,EAAAA,IAAA,iBAAoBM,IADxB,cACbH,EADa,yBAGZA,EAASC,MAHG,2CAAH,sDAMZG,EAAsB,mCAAG,WAAMC,GAAN,uFACNR,EAAAA,EAAAA,IAAU,gBAAiB,CAChDS,OAAQ,CACND,MAAOA,KAHkB,cACvBL,EADuB,OAM7BO,QAAQC,IAAIR,EAASC,KAAKQ,SANG,kBAOtBT,EAASC,KAAKQ,SAPQ,2CAAH,sDAUtB1B,EAAmB,mCAAG,WAAMoB,GAAN,uFACHN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,aADG,cACpBH,EADoB,yBAGnBA,EAASC,KAAKvB,MAHK,2CAAH,sDAMnBgC,EAAmB,mCAAG,WAAMP,GAAN,uFACHN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,aADG,cACpBH,EADoB,yBAEnBA,EAASC,KAAKQ,SAFK,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/Pages/CastPage/castPages.module.scss?e1a4","Pages/CastPage/CastPage.jsx","Utils/MoviesAPI.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"GalleryItemList\":\"castPages_GalleryItemList__PBOUT\",\"ImageGalleryItemImage\":\"castPages_ImageGalleryItemImage__JQeyS\"};","import styles from './castPages.module.scss';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieCreditsByID } from 'Utils/MoviesAPI';\n\nconst CastPage = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    getMovieCreditsByID(movieId).then(cast => setCast(cast));\n  }, [movieId]);\n\n  const elements = cast.map(({ credit_id, name, character, profile_path }) => (\n    <li key={credit_id}>\n      {profile_path && (\n        <img\n          className={styles.ImageGalleryItemImage}\n          src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n          alt=\"\"\n          width=\"200\"\n        />\n      )}\n      <p>{name}</p>\n      <p>{character}</p>\n    </li>\n  ));\n\n  return (\n    <>\n      <ul>\n        <li className={styles.GalleryItemList}>\n          {elements.length === 0 ? (\n            <p>'We did not find any information about casts for this movie'</p>\n          ) : (\n            elements\n          )}\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default CastPage;\n","// https://api.themoviedb.org/3/movie/550?api_key=f8293dad30f8a0ae553bd7bee540fd13\n\nimport axios from 'axios';\n\nconst AUTH_TOKEN = 'f8293dad30f8a0ae553bd7bee540fd13';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: AUTH_TOKEN,\n};\n\nconst getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/week');\n  return response.data;\n};\n\nconst getMovieByID = async id => {\n  const response = await axios.get(`/movie/${id}`);\n\n  return response.data;\n};\n\nconst getMoviesByQuerySearch = async query => {\n  const response = await axios.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  console.log(response.data.results);\n  return response.data.results;\n};\n\nconst getMovieCreditsByID = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n\n  return response.data.cast;\n};\n\nconst getMovieReviewsByID = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data.results;\n};\n\nexport {\n  getTrendingMovies,\n  getMovieByID,\n  getMoviesByQuerySearch,\n  getMovieCreditsByID,\n  getMovieReviewsByID,\n};\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","getMovieCreditsByID","then","elements","map","credit_id","name","character","profile_path","className","styles","src","alt","width","length","axios","api_key","getTrendingMovies","response","data","getMovieByID","id","getMoviesByQuerySearch","query","params","console","log","results","getMovieReviewsByID"],"sourceRoot":""}