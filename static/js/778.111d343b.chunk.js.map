{"version":3,"file":"static/js/778.111d343b.chunk.js","mappings":"+LACA,EAAuB,qBAAvB,EAAmD,qB,kBCenD,EAZe,WACb,IAAMA,EAAWC,EAAAA,EAAAA,KAAU,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,KAAb,OACzB,yBACE,SAAC,KAAD,CAASC,UAAWC,EAAaC,GAAIH,EAArC,SACGD,KAFID,EADgB,IAQ3B,OAAO,eAAIG,UAAWC,EAAf,SAA6BN,GACrC,E,SCbD,EAAyB,uBCiBzB,EAbe,WACb,OACE,iCACE,mBAAQK,UAAWC,EAAnB,UACE,SAAC,EAAD,OAEF,2BACE,SAAC,KAAD,QAIP,C,mCCdKL,EAAQ,CACZ,CACEC,IAAIM,EAAAA,EAAAA,MACJL,KAAM,YACNC,KAAM,KAER,CACEF,IAAIM,EAAAA,EAAAA,MACJL,KAAM,SACNC,KAAM,YAmBV,K,uDC7BO,IAkBII,EAAS,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACX,EAAIY,GAWvD,OAREZ,IAFFY,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Navbar/navbar.module.scss?1283","components/Navbar/Navbar.jsx","webpack://goit-react-hw-05-movies/./src/components/Layout/layout.module.scss?f40e","components/Layout/Layout.jsx","components/Navbar/items.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"navbar_list__F69rX\",\"link\":\"navbar_link__48gXS\"};","import { NavLink } from 'react-router-dom';\nimport styles from './navbar.module.scss';\nimport items from './items';\n\nconst Navbar = () => {\n  const elements = items.map(({ id, text, link }) => (\n    <li key={id}>\n      <NavLink className={styles.link} to={link}>\n        {text}\n      </NavLink>\n    </li>\n  ));\n\n  return <ul className={styles.list}>{elements}</ul>;\n};\n\nexport default Navbar;\n","// extracted by mini-css-extract-plugin\nexport default {\"Navbar\":\"layout_Navbar__zz5T-\"};","import Navbar from 'components/Navbar/Navbar';\nimport { Outlet } from 'react-router-dom';\n\nimport styles from './layout.module.scss';\n\nconst Layout = () => {\n  return (\n    <>\n      <header className={styles.Navbar}>\n        <Navbar />\n      </header>\n      <main>\n        <Outlet />\n      </main>\n    </>\n  );\n};\n\nexport default Layout;\n","import { nanoid } from 'nanoid';\n\nconst items = [\n  {\n    id: nanoid(),\n    text: 'Home page',\n    link: '/',\n  },\n  {\n    id: nanoid(),\n    text: 'Movies',\n    link: '/movies',\n  },\n  // {\n  //   id: nanoid(),\n  //   text: 'MovieDetails',\n  //   link: '/movies/:movieId',\n  // },\n  // {\n  //   id: nanoid(),\n  //   text: 'Cast',\n  //   link: '/movies/:movieId/cast',\n  // },\n  // {\n  //   id: nanoid(),\n  //   text: 'Reviews',\n  //   link: '/movies/:movieId/reviews',\n  // },\n];\n\nexport default items;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["elements","items","id","text","link","className","styles","to","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}